{
    "$schema": "http://json-schema.org/draft-07/schema",
    "title": "JSON Schema for Automatiqal runbook files",
    "description": "Automatiqal JSON schema (@informatiqal)",
    "type": "object",
    "additionalProperties": false,
    "properties": {
        "name": {
            "description": "Name of the runbook",
            "type": "string"
        },
        "description": {
            "type": "string",
            "description": "Free text runbook description"
        },
        "edition": {
            "description": "Target Qlik Sense environment type - windows or saas. Default is \"windows\"",
            "type": "string",
            "enum": [
                "windows",
                "saas"
            ]
        },
        "trace": {
            "description": "Trace levels",
            "type": "string",
            "enum": [
                "error",
                "debug"
            ]
        },
        "environment": {
            "type": "object",
            "description": "Define the Qlik environment details (host, port, authentication etc.)",
            "properties": {
                "host": {
                    "type": "string",
                    "description": "Qlik Sense host name"
                },
                "port": {
                    "type": "integer",
                    "description": "Repository port (default 4242)",
                    "default": 4242
                },
                "authentication": {
                    "type": "object",
                    "description": "Authentication information (certificates, jwt etc.)",
                    "oneOf": [
                        {
                            "description": "Certificate authentication. Use when connecting to Repo  directly - on port 4242 (default)",
                            "required": [
                                "cert",
                                "key",
                                "user_dir",
                                "user_name"
                            ],
                            "properties": {
                                "cert": {
                                    "type": "string",
                                    "description": "Full path to certificate (cert.pem)\nc:\\path\\to\\cert.pem\nc:\\path\\to\\some-cert.pem",
                                    "examples": [
                                        "c:\\path\\to\\cert.pem",
                                        "c:\\path\\to\\some-cert.pem"
                                    ]
                                },
                                "key": {
                                    "type": "string",
                                    "description": "Full path to certificate key (cert_key.pem)",
                                    "examples": [
                                        "c:\\path\\to\\cert_key.pem",
                                        "c:\\path\\to\\key.pem"
                                    ]
                                },
                                "user_dir": {
                                    "type": "string"
                                },
                                "user_name": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "description": "JWT authentication. Use via dedicated JWT virtual proxy",
                            "required": [
                                "token"
                            ],
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "description": "Header authentication. Use via header specific virtual proxy",
                            "required": [
                                "header",
                                "user"
                            ],
                            "properties": {
                                "header": {
                                    "type": "string"
                                },
                                "user": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "description": "Authenticate with session ID",
                            "required": [
                                "sessionId",
                                "cookieHeaderName"
                            ],
                            "properties": {
                                "sessionId": {
                                    "type": "string"
                                },
                                "cookieHeaderName": {
                                    "type": "string"
                                }
                            }
                        }
                    ]
                }
            },
            "required": [
                "host",
                "authentication"
            ]
        },
        "tasks": {
            "$ref": "#/definitions/tasks"
        }
    },
    "required": [
        "name",
        "environment",
        "tasks",
        "edition"
    ],
    "definitions": {
        "tasks": {
            "type": "array",
            "description": "List of tasks to be executed in sequence",
            "minItems": 1,
            "items": {
                "anyOf": [
                    {
                        "$ref": "#/definitions/about.apiDefaults"
                    },
                    {
                        "$ref": "#/definitions/about.apiDescription"
                    },
                    {
                        "$ref": "#/definitions/about.apiRelations"
                    },
                    {
                        "$ref": "#/definitions/about.enums"
                    },
                    {
                        "$ref": "#/definitions/about.get"
                    },
                    {
                        "$ref": "#/definitions/about.openApi"
                    },
                    {
                        "$ref": "#/definitions/app.copy"
                    },
                    {
                        "$ref": "#/definitions/app.export"
                    },
                    {
                        "$ref": "#/definitions/app.exportMany"
                    },
                    {
                        "$ref": "#/definitions/app.get"
                    },
                    {
                        "$ref": "#/definitions/app.getAll"
                    },
                    {
                        "$ref": "#/definitions/app.publish"
                    },
                    {
                        "$ref": "#/definitions/app.remove"
                    },
                    {
                        "$ref": "#/definitions/app.switch"
                    },
                    {
                        "$ref": "#/definitions/app.update"
                    },
                    {
                        "$ref": "#/definitions/app.upload"
                    },
                    {
                        "$ref": "#/definitions/app.uploadAndReplace"
                    },
                    {
                        "$ref": "#/definitions/app.uploadMany"
                    },
                    {
                        "$ref": "#/definitions/certificate.distributionPathGet"
                    },
                    {
                        "$ref": "#/definitions/certificate.generate"
                    },
                    {
                        "$ref": "#/definitions/compositeTrigger.create"
                    },
                    {
                        "$ref": "#/definitions/compositeTrigger.get"
                    },
                    {
                        "$ref": "#/definitions/compositeTrigger.getAll"
                    },
                    {
                        "$ref": "#/definitions/compositeTrigger.remove"
                    },
                    {
                        "$ref": "#/definitions/compositeTrigger.update"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.create"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.export"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.exportMany"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.get"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.getAll"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.importFile"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.importFileMany"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.remove"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.removeFile"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.removeFileMany"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.update"
                    },
                    {
                        "$ref": "#/definitions/customBannerMessage.create"
                    },
                    {
                        "$ref": "#/definitions/customBannerMessage.get"
                    },
                    {
                        "$ref": "#/definitions/customBannerMessage.getAll"
                    },
                    {
                        "$ref": "#/definitions/customBannerMessage.remove"
                    },
                    {
                        "$ref": "#/definitions/customBannerMessage.update"
                    },
                    {
                        "$ref": "#/definitions/customProperty.create"
                    },
                    {
                        "$ref": "#/definitions/customProperty.get"
                    },
                    {
                        "$ref": "#/definitions/customProperty.remove"
                    },
                    {
                        "$ref": "#/definitions/customProperty.update"
                    },
                    {
                        "$ref": "#/definitions/dataConnection.create"
                    },
                    {
                        "$ref": "#/definitions/dataConnection.get"
                    },
                    {
                        "$ref": "#/definitions/dataConnection.getAll"
                    },
                    {
                        "$ref": "#/definitions/dataConnection.remove"
                    },
                    {
                        "$ref": "#/definitions/dataConnection.update"
                    },
                    {
                        "$ref": "#/definitions/engineHealth.create"
                    },
                    {
                        "$ref": "#/definitions/engineHealth.get"
                    },
                    {
                        "$ref": "#/definitions/engineHealth.getAll"
                    },
                    {
                        "$ref": "#/definitions/engineHealth.remove"
                    },
                    {
                        "$ref": "#/definitions/engineHealth.update"
                    },
                    {
                        "$ref": "#/definitions/extension.get"
                    },
                    {
                        "$ref": "#/definitions/extension.getAll"
                    },
                    {
                        "$ref": "#/definitions/extension.import"
                    },
                    {
                        "$ref": "#/definitions/extension.remove"
                    },
                    {
                        "$ref": "#/definitions/extension.update"
                    },
                    {
                        "$ref": "#/definitions/externalTask.create"
                    },
                    {
                        "$ref": "#/definitions/externalTask.get"
                    },
                    {
                        "$ref": "#/definitions/externalTask.getAll"
                    },
                    {
                        "$ref": "#/definitions/externalTask.remove"
                    },
                    {
                        "$ref": "#/definitions/externalTask.update"
                    },
                    {
                        "$ref": "#/definitions/import"
                    },
                    {
                        "$ref": "#/definitions/node.get"
                    },
                    {
                        "$ref": "#/definitions/node.getAll"
                    },
                    {
                        "$ref": "#/definitions/proxy.update"
                    },
                    {
                        "$ref": "#/definitions/reloadTask.create"
                    },
                    {
                        "$ref": "#/definitions/reloadTask.remove"
                    },
                    {
                        "$ref": "#/definitions/reloadTask.update"
                    },
                    {
                        "$ref": "#/definitions/schemaTrigger.create"
                    },
                    {
                        "$ref": "#/definitions/schemaTrigger.get"
                    },
                    {
                        "$ref": "#/definitions/schemaTrigger.getAll"
                    },
                    {
                        "$ref": "#/definitions/schemaTrigger.remove"
                    },
                    {
                        "$ref": "#/definitions/schemaTrigger.update"
                    },
                    {
                        "$ref": "#/definitions/serviceStatus.get"
                    },
                    {
                        "$ref": "#/definitions/stream.create"
                    },
                    {
                        "$ref": "#/definitions/stream.get"
                    },
                    {
                        "$ref": "#/definitions/stream.getAll"
                    },
                    {
                        "$ref": "#/definitions/stream.remove"
                    },
                    {
                        "$ref": "#/definitions/stream.update"
                    },
                    {
                        "$ref": "#/definitions/systemRule.create"
                    },
                    {
                        "$ref": "#/definitions/systemRule.getAll"
                    },
                    {
                        "$ref": "#/definitions/systemRule"
                    },
                    {
                        "$ref": "#/definitions/systemRule.licenseCreate"
                    },
                    {
                        "$ref": "#/definitions/systemRule.remove"
                    },
                    {
                        "$ref": "#/definitions/systemRule.update"
                    },
                    {
                        "$ref": "#/definitions/tag.create"
                    },
                    {
                        "$ref": "#/definitions/tag.createMany"
                    },
                    {
                        "$ref": "#/definitions/tag.remove"
                    },
                    {
                        "$ref": "#/definitions/tag.update"
                    },
                    {
                        "$ref": "#/definitions/task.get"
                    },
                    {
                        "$ref": "#/definitions/task.getAll"
                    },
                    {
                        "$ref": "#/definitions/task.start"
                    },
                    {
                        "$ref": "#/definitions/task.startSynchronous"
                    },
                    {
                        "$ref": "#/definitions/task.stop"
                    },
                    {
                        "$ref": "#/definitions/user.create"
                    },
                    {
                        "$ref": "#/definitions/user.get"
                    },
                    {
                        "$ref": "#/definitions/user.getAll"
                    },
                    {
                        "$ref": "#/definitions/user.remove"
                    },
                    {
                        "$ref": "#/definitions/user.update"
                    },
                    {
                        "$ref": "#/definitions/virtualProxy.create"
                    },
                    {
                        "$ref": "#/definitions/virtualProxy.get"
                    },
                    {
                        "$ref": "#/definitions/virtualProxy.getAll"
                    },
                    {
                        "$ref": "#/definitions/virtualProxy.remove"
                    },
                    {
                        "$ref": "#/definitions/virtualProxy.update"
                    }
                ]
            }
        },
        "about.apiDefaults": {
            "type": "object",
            "description": "Get API default for specific entity (app, stream etc.)",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "about.apiDescription"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "path"
                    ],
                    "properties": {
                        "path": {
                            "type": "string"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "about.apiDescription": {
            "type": "object",
            "description": "Get API description",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "about.apiDescription"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "about.apiRelations": {
            "type": "object",
            "description": "Get API relations",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "about.apiRelations"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "about.enums": {
            "type": "object",
            "description": "Get enums information",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "about.enums"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "about.get": {
            "type": "object",
            "description": "Get about information",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "about.get"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "about.openApi": {
            "type": "object",
            "description": "Get OpenAPI definitions",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "about.openApi"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "app.copy": {
            "type": "object",
            "description": "Duplicate app/apps",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "app.copy"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the apps to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "App new name"
                        },
                        "includeCustomProperties": {
                            "type": "boolean",
                            "description": "Copy the custom properties as well"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "app.export": {
            "type": "object",
            "description": "Export app",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "app.export"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "description": "Filter to apply to retrieve the apps to update",
                    "type": "string"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "location"
                    ],
                    "properties": {
                        "location": {
                            "type": "string",
                            "description": "The folder path where the app will be downloaded"
                        },
                        "skipData": {
                            "type": "boolean",
                            "description": "Export without data"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "app.exportMany": {
            "type": "object",
            "description": "Export apps",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "app.exportMany"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "description": "Filter to apply to retrieve the apps to update",
                    "type": "string"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "location"
                    ],
                    "properties": {
                        "location": {
                            "type": "string",
                            "description": "The folder path where the apps will be downloaded"
                        },
                        "skipData": {
                            "type": "boolean",
                            "description": "Export without data"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "app.get": {
            "type": "object",
            "description": "Get instance of app/apps",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "app.get"
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "app.getAll": {
            "type": "object",
            "description": "Get instance of all apps",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "app.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "app.publish": {
            "type": "object",
            "description": "Publish app/apps to stream",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "app.publish"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the apps to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name of the app after is published"
                        },
                        "stream": {
                            "type": "string",
                            "description": "Name of the stream where the app will be published"
                        }
                    },
                    "required": [
                        "stream"
                    ]
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "app.remove": {
            "type": "object",
            "description": "Remove app/apps",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "app.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the apps to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "app.switch": {
            "type": "object",
            "description": "Publish an app by overwriting existing app",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "app.switch"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "targetAppId": {
                            "type": "string",
                            "description": "Target app id"
                        }
                    },
                    "required": [
                        "targetAppId"
                    ]
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "app.update": {
            "type": "object",
            "description": "Update app/apps properties",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "app.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "customPropertyOperation": {
                            "$ref": "#/definitions/AddRemoveSet"
                        },
                        "tagOperation": {
                            "$ref": "#/definitions/AddRemoveSet"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the apps to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "app.upload": {
            "type": "object",
            "description": "Upload brand new app (qvf)",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "app.upload"
                    ]
                },
                "details": {
                    "type": "object",
                    "required": [
                        "file",
                        "name"
                    ],
                    "properties": {
                        "file": {
                            "type": [
                                "object",
                                "string"
                            ]
                        },
                        "name": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "title": "Custom properties names and values. In format: name=some value here",
                            "items": {
                                "type": "string",
                                "pattern": "^([a-zA-Z0-9_]+=[a-zA-Z0-9_. -=]+)$"
                            }
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "app.uploadAndReplace": {
            "type": "object",
            "description": "Upload new app and replace existing app",
            "required": [
                "name",
                "file",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "file": {
                    "type": "object"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "app.switch"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "targetAppId": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "targetAppId"
                    ]
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "app.uploadMany": {
            "type": "object",
            "description": "Upload multiple new apps (qvf)",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "app.uploadMany"
                    ]
                },
                "details": {
                    "oneOf": [
                        {
                            "type": "array",
                            "title": "IMPORTANT! Use this way only when using Automatiqal package directly!",
                            "items": {
                                "type": "object",
                                "required": [
                                    "file",
                                    "name"
                                ],
                                "properties": {
                                    "file": {
                                        "type": [
                                            "object",
                                            "string"
                                        ]
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "customProperties": {
                                        "type": "array",
                                        "title": "Custom properties names and values. In format: name=some value here",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^([a-zA-Z0-9_]+=[a-zA-Z0-9_. -=]+)$"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "type": "object",
                            "title": "IMPORTANT! Use this way ONLY when calling from CLI!",
                            "properties": {
                                "location": {
                                    "type": "string",
                                    "description": "Folder where the qvf(s) are located"
                                }
                            }
                        }
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "certificate.distributionPathGet": {
            "type": "object",
            "description": "Get distribution certificate path",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "certificate.distributionPathGet"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "certificate.generate": {
            "type": "object",
            "description": "Generate new set of certificates",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "certificate.generate"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "machineNames": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "certificatePassword": {
                            "type": "string"
                        },
                        "includeSecretsKey": {
                            "type": "boolean"
                        },
                        "includeCa": {
                            "type": "boolean"
                        },
                        "exportFormat": {
                            "type": "string",
                            "enum": [
                                "Windows",
                                "Pem"
                            ]
                        }
                    },
                    "required": [
                        "machineNames"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ]
        },
        "compositeTrigger.create": {
            "type": "object",
            "description": "Create new composite trigger",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "compositeTrigger.create"
                    ]
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name",
                        "eventTasks",
                        "task"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "eventTasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "state": {
                                        "type": "string",
                                        "enum": [
                                            "success",
                                            "fail"
                                        ]
                                    }
                                },
                                "oneOf": [
                                    {
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "id"
                                        ],
                                        "not": {
                                            "properties": {
                                                "filter": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "filter"
                                            ]
                                        }
                                    },
                                    {
                                        "properties": {
                                            "filter": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "filter"
                                        ],
                                        "not": {
                                            "required": [
                                                "id"
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "timeConstraints": {
                            "type": "object",
                            "properties": {
                                "days": {
                                    "type": "integer"
                                },
                                "hours": {
                                    "type": "integer"
                                },
                                "minutes": {
                                    "type": "integer"
                                },
                                "seconds": {
                                    "type": "integer"
                                }
                            }
                        },
                        "task": {
                            "oneOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id"
                                    ],
                                    "not": {
                                        "properties": {
                                            "filter": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "filter"
                                        ]
                                    }
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "filter": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "filter"
                                    ],
                                    "not": {
                                        "required": [
                                            "id"
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ]
        },
        "compositeTrigger.get": {
            "type": "object",
            "description": "Get instance of composite trigger(s)",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "compositeTrigger.get"
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "compositeTrigger.getAll": {
            "type": "object",
            "description": "Get instance of all composite triggers",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "compositeTrigger.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "compositeTrigger.remove": {
            "type": "object",
            "description": "Remove composite trigger(s)",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "compositeTrigger.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the tag"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "compositeTrigger.update": {
            "type": "object",
            "description": "Update composite trigger(s) properties",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "compositeTrigger.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "eventTasks": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "state": {
                                        "type": "string",
                                        "enum": [
                                            "success",
                                            "fail"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the entities(s) to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "contentLibrary.create": {
            "type": "object",
            "description": "Create new content library",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "contentLibrary.create"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "owner": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "contentLibrary.export": {
            "type": "object",
            "description": "Export single file from content library",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "contentLibrary.export"
                    ]
                },
                "details": {
                    "type": "object",
                    "required": [
                        "location",
                        "sourceFileName"
                    ],
                    "properties": {
                        "location": {
                            "type": "string"
                        },
                        "sourceFileName": {
                            "type": "string"
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the content library"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "contentLibrary.exportMany": {
            "type": "object",
            "description": "Export multiple files from content library",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "contentLibrary.exportMany"
                    ]
                },
                "details": {
                    "type": "object",
                    "required": [
                        "location",
                        "sourceFileNames"
                    ],
                    "properties": {
                        "location": {
                            "type": "string"
                        },
                        "sourceFileNames": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the content library"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "contentLibrary.get": {
            "type": "object",
            "description": "Get instance of content library/libraries",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "contentLibrary.get"
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "contentLibrary.getAll": {
            "type": "object",
            "description": "Get instance of all content libraries",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "contentLibrary.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "contentLibrary.importFile": {
            "type": "object",
            "description": "Import file for content library",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "contentLibrary.importFile"
                    ]
                },
                "details": {
                    "type": "object",
                    "required": [
                        "file",
                        "externalPath"
                    ],
                    "properties": {
                        "file": {
                            "type": [
                                "object",
                                "string"
                            ]
                        },
                        "externalPath": {
                            "type": "string"
                        },
                        "overwrite": {
                            "type": "boolean"
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the content library"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "contentLibrary.importFileMany": {
            "type": "object",
            "description": "Import multiple files for content library",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "contentLibrary.importFileMany"
                    ]
                },
                "details": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "file",
                            "externalPath"
                        ],
                        "properties": {
                            "file": {
                                "type": [
                                    "object",
                                    "string"
                                ]
                            },
                            "externalPath": {
                                "type": "string"
                            },
                            "overwrite": {
                                "type": "boolean"
                            }
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the content library"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "contentLibrary.remove": {
            "type": "object",
            "description": "Remove content library/libraries",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "contentLibrary.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to retrieve the content libraries to remove"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "contentLibrary.removeFile": {
            "type": "object",
            "description": "Remove file from content library",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "contentLibrary.removeFile"
                    ]
                },
                "details": {
                    "type": "object",
                    "required": [
                        "externalPath"
                    ],
                    "properties": {
                        "externalPath": {
                            "type": "string"
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the content library"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "contentLibrary.removeFileMany": {
            "type": "object",
            "description": "Remove multiple files from content library",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "contentLibrary.removeFileMany"
                    ]
                },
                "details": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the content library"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "contentLibrary.update": {
            "type": "object",
            "description": "Update content library/libraries properties",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "contentLibrary.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "owner": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "customPropertyOperation": {
                            "$ref": "#/definitions/AddRemoveSet"
                        },
                        "tagOperation": {
                            "$ref": "#/definitions/AddRemoveSet"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the user(s) to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "customBannerMessage.create": {
            "type": "object",
            "description": "Create new custom banner message",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "customBannerMessage.create"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name",
                        "message",
                        "messageType",
                        "isActive",
                        "duration"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "message": {
                            "type": "string"
                        },
                        "messageType": {
                            "type": "integer",
                            "description": "0 -> Standard\n1 -> Info\n2 -> Warning\n3 -> Error"
                        },
                        "isActive": {
                            "type": "boolean"
                        },
                        "duration": {
                            "type": "integer",
                            "description": "Duration time in seconds"
                        }
                    }
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean",
                            "description": "Default is false. If set to true then if there is already an tag with the same name the command will create new one"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "customBannerMessage.get": {
            "type": "object",
            "description": "Get instance of banner message(s)",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "customBannerMessage.get"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "customBannerMessage.getAll": {
            "type": "object",
            "description": "Get instance of all banner messages",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "customBannerMessage.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "customBannerMessage.remove": {
            "type": "object",
            "description": "Remove custom banner message(s)",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "customBannerMessage.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the banner messages"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "customBannerMessage.update": {
            "type": "object",
            "description": "Update custom banner(s) properties",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "customBannerMessage.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "message": {
                            "type": "string"
                        },
                        "messageType": {
                            "type": "integer",
                            "description": "0 -> Standard\n1 -> Info\n2 -> Warning\n3 -> Error"
                        },
                        "isActive": {
                            "type": "boolean"
                        },
                        "duration": {
                            "type": "integer",
                            "description": "Duration time in seconds"
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the custom banner(s) to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "customProperty.create": {
            "type": "object",
            "description": "Create new custom property",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "customProperty.create"
                    ]
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "choiceValues": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "objectTypes": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "App",
                                    "AnalyticConnection",
                                    "ContentLibrary",
                                    "DataConnection",
                                    "EngineService",
                                    "Extension",
                                    "ExternalProgramTask",
                                    "ServerNodeConfiguration",
                                    "PrintingService",
                                    "ProxyService",
                                    "ReloadTask",
                                    "RepositoryService",
                                    "SchedulerService",
                                    "Stream",
                                    "UserSyncTask",
                                    "User",
                                    "VirtualProxyConfig"
                                ]
                            }
                        },
                        "valueType": {
                            "type": "string"
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "customProperty.get": {
            "type": "object",
            "description": "Get instance of custom property(ies)",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "customProperty.get"
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "customProperty.remove": {
            "type": "object",
            "description": "Remove custom property(ies)",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "customProperty.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the custom property"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "customProperty.update": {
            "type": "object",
            "description": "Update custom property(ies) properties",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "customProperty.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "choiceValues": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "objectTypes": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "App",
                                    "AnalyticConnection",
                                    "ContentLibrary",
                                    "DataConnection",
                                    "EngineService",
                                    "Extension",
                                    "ExternalProgramTask",
                                    "ServerNodeConfiguration",
                                    "PrintingService",
                                    "ProxyService",
                                    "ReloadTask",
                                    "RepositoryService",
                                    "SchedulerService",
                                    "Stream",
                                    "UserSyncTask",
                                    "User",
                                    "VirtualProxyConfig"
                                ]
                            }
                        },
                        "valueType": {
                            "type": "string"
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the custom property to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "dataConnection.create": {
            "type": "object",
            "description": "Create new data connection",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "dataConnection.create"
                    ]
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name",
                        "connectionString"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "connectionString": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "username": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        },
                        "architecture": {
                            "type": "string",
                            "enum": [
                                "x86",
                                "x64",
                                "Undefined"
                            ]
                        },
                        "logOn": {
                            "type": "string",
                            "enum": [
                                "Current user",
                                "Service user"
                            ]
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "dataConnection.get": {
            "type": "object",
            "description": "Get instance of data connection/s",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "dataConnection.get"
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "skip": {
                    "type": "boolean"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "unmaskSecrets": {
                            "type": "boolean"
                        },
                        "multiple": {
                            "type": "boolean"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "dataConnection.getAll": {
            "type": "object",
            "description": "Get instance of all data connections",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "dataConnection.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "unmaskSecrets": {
                            "type": "boolean"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "dataConnection.remove": {
            "type": "object",
            "description": "Remove data connection(s)",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "dataConnection.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the apps to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "dataConnection.update": {
            "type": "object",
            "description": "Update data connection/connections properties",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "dataConnection.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "connectionString": {
                            "type": "string"
                        },
                        "username": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        },
                        "owner": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "customPropertyOperation": {
                            "$ref": "#/definitions/AddRemoveSet"
                        },
                        "tagOperation": {
                            "$ref": "#/definitions/AddRemoveSet"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the data connection/s to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "engineHealth.create": {
            "type": "object",
            "description": "Create new engine health record",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "engineHealth.create"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name",
                        "version",
                        "started",
                        "commited_mem",
                        "allocated_mem",
                        "free_mem",
                        "total_cpu",
                        "calls",
                        "selections",
                        "active_users",
                        "total_users",
                        "hits_cache",
                        "lookups_cache",
                        "added_cache",
                        "replaced_cache",
                        "bytes_added",
                        "saturated",
                        "responded_to_latest",
                        "totalPhysical",
                        "totalStaticByteSize"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "version": {
                            "type": "string"
                        },
                        "started": {
                            "type": "string"
                        },
                        "commited_mem": {
                            "type": "number"
                        },
                        "allocated_mem": {
                            "type": "number"
                        },
                        "free_mem": {
                            "type": "number"
                        },
                        "total_cpu": {
                            "type": "integer"
                        },
                        "active_sessions": {
                            "type": "number"
                        },
                        "total_sessions": {
                            "type": "number"
                        },
                        "active_docs": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "in_memory_docs": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "loaded_docs": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "calls": {
                            "type": "number"
                        },
                        "selections": {
                            "type": "number"
                        },
                        "active_users": {
                            "type": "number"
                        },
                        "total_users": {
                            "type": "number"
                        },
                        "hits_cache": {
                            "type": "number"
                        },
                        "lookups_cache": {
                            "type": "number"
                        },
                        "added_cache": {
                            "type": "number"
                        },
                        "replaced_cache": {
                            "type": "number"
                        },
                        "bytes_added": {
                            "type": "number"
                        },
                        "saturated": {
                            "type": "boolean"
                        },
                        "responded_to_latest": {
                            "type": "boolean"
                        },
                        "totalPhysical": {
                            "type": "number"
                        },
                        "totalStaticByteSize": {
                            "type": "number"
                        }
                    }
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean",
                            "description": "Default is false. If set to true then if there is already an tag with the same name the command will create new one"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "engineHealth.get": {
            "type": "object",
            "description": "Get instance of engine(s) health",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "engineHealth.get"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "engineHealth.getAll": {
            "type": "object",
            "description": "Get instance of all engines health",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "engineHealth.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "engineHealth.remove": {
            "type": "object",
            "description": "Remove engine(s) health",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "engineHealth.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the engine(s) health"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "engineHealth.update": {
            "type": "object",
            "description": "Update engine(s) health properties",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "engineHealth.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "version": {
                            "type": "string"
                        },
                        "started": {
                            "type": "string"
                        },
                        "commited_mem": {
                            "type": "number"
                        },
                        "allocated_mem": {
                            "type": "number"
                        },
                        "free_mem": {
                            "type": "number"
                        },
                        "total_cpu": {
                            "type": "number"
                        },
                        "active_sessions": {
                            "type": "number"
                        },
                        "total_sessions": {
                            "type": "number"
                        },
                        "active_docs": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "in_memory_docs": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "loaded_docs": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "calls": {
                            "type": "number"
                        },
                        "selections": {
                            "type": "number"
                        },
                        "active_users": {
                            "type": "number"
                        },
                        "total_users": {
                            "type": "number"
                        },
                        "hits_cache": {
                            "type": "number"
                        },
                        "lookups_cache": {
                            "type": "number"
                        },
                        "added_cache": {
                            "type": "number"
                        },
                        "replaced_cache": {
                            "type": "number"
                        },
                        "bytes_added": {
                            "type": "number"
                        },
                        "saturated": {
                            "type": "boolean"
                        },
                        "responded_to_latest": {
                            "type": "boolean"
                        },
                        "totalPhysical": {
                            "type": "number"
                        },
                        "totalStaticByteSize": {
                            "type": "number"
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the engine(s) health to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "extension.get": {
            "type": "object",
            "description": "Get instance of extension/extensions",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "extension.get"
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "extension.getAll": {
            "type": "object",
            "description": "Get instance of all extensions",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "extension.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "extension.import": {
            "type": "object",
            "description": "Import new extension",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "extension.import"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "file"
                    ],
                    "properties": {
                        "file": {
                            "type": [
                                "object",
                                "string"
                            ]
                        },
                        "password": {
                            "type": "string"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "extension.remove": {
            "type": "object",
            "description": "Remove extension/extensions",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "extension.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the extensions to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "extension.update": {
            "type": "object",
            "description": "Update extension(s) properties",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "extension.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Value in format: CustomPropertyName=value"
                            }
                        }
                    }
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "customPropertyOperation": {
                            "$ref": "#/definitions/AddRemoveSet"
                        },
                        "tagOperation": {
                            "$ref": "#/definitions/AddRemoveSet"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the extension(s) to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "externalTask.create": {
            "type": "object",
            "description": "Create new external task",
            "additionalProperties": false,
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "externalTask.create"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                        "name",
                        "path"
                    ],
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name of the external task"
                        },
                        "path": {
                            "type": "string"
                        },
                        "parameters": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "externalTask.get": {
            "type": "object",
            "description": "Get instance of external task/tasks",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "externalTask.get"
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "externalTask.getAll": {
            "type": "object",
            "description": "Get instance of all external tasks",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "externalTask.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "externalTask.remove": {
            "type": "object",
            "description": "Remove external task/tasks",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "externalTask.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to retrieve the external tasks to remove"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "externalTask.update": {
            "type": "object",
            "description": "Update external task/tasks properties",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "externalTask.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "taskSessionTimeout": {
                            "type": "integer"
                        },
                        "maxRetries": {
                            "type": "integer"
                        },
                        "owner": {
                            "type": "string"
                        },
                        "path": {
                            "type": "string"
                        },
                        "parameters": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "options": {
                    "$ref": "#/definitions/UpdateExtraOptions"
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the external task(s) to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "import": {
            "type": "object",
            "description": "IMPORTANT! Use this way ONLY when calling from CLI!",
            "required": [
                "import"
            ],
            "properties": {
                "import": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "object",
                            "description": "Used only in CLI! Path to file with tasks to Include",
                            "required": [
                                "path"
                            ],
                            "properties": {
                                "path": {
                                    "type": "string",
                                    "description": "Path to yaml file where external tasks are defined"
                                },
                                "vars": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "^.*$": {
                                                "anyOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "number"
                                                    },
                                                    {
                                                        "type": "boolean"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    ]
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "node.get": {
            "type": "object",
            "description": "Get instance of node/nodes",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "node.get"
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "node.getAll": {
            "type": "object",
            "description": "Get instance of all nodes",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "node.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "proxy.update": {
            "type": "object",
            "description": "Update proxy service",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "proxy.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "listenPort": {
                            "type": "integer"
                        },
                        "allowHttp": {
                            "type": "boolean"
                        },
                        "unencryptedListenPort": {
                            "type": "integer"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "authenticationListenPort": {
                            "type": "integer"
                        },
                        "kerberosAuthentication": {
                            "type": "integer"
                        },
                        "unencryptedAuthenticationListenPort": {
                            "type": "integer"
                        },
                        "sslBrowserCertificateThumbprint": {
                            "type": "string"
                        },
                        "keepAliveTimeoutSeconds": {
                            "type": "integer"
                        },
                        "maxHeaderSizeBytes": {
                            "type": "integer"
                        },
                        "maxHeaderLines": {
                            "type": "integer"
                        },
                        "restListenPort": {
                            "type": "integer"
                        },
                        "virtualProxies": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "customPropertyOperation": {
                            "$ref": "#/definitions/AddRemoveSet"
                        },
                        "tagOperation": {
                            "$ref": "#/definitions/AddRemoveSet"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the apps to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "reloadTask.create": {
            "type": "object",
            "description": "Create new reload task",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "reloadTask.create"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name",
                        "appFilter"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "appFilter": {
                            "type": "string"
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "reloadTask.remove": {
            "type": "object",
            "description": "Remove reload task(s)",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "reloadTask.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the reload task(s0"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "reloadTask.update": {
            "type": "object",
            "description": "Update reload task(s) properties",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "reloadTask.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "taskSessionTimeout": {
                            "type": "integer"
                        },
                        "maxRetries": {
                            "type": "integer"
                        },
                        "owner": {
                            "type": "string"
                        },
                        "appId": {
                            "type": "integer"
                        },
                        "appFilter": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "options": {
                    "$ref": "#/definitions/UpdateExtraOptions"
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the reloadTask(s) to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "schemaTrigger.create": {
            "type": "object",
            "description": "Create new schema trigger",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "schemaTrigger.create"
                    ]
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name",
                        "task",
                        "repeat"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "repeat": {
                            "type": "string",
                            "enum": [
                                "Once",
                                "Minute",
                                "Hourly",
                                "Daily",
                                "Weekly",
                                "Monthly"
                            ]
                        },
                        "repeatEvery": {
                            "type": "integer"
                        },
                        "startDate": {
                            "type": "string"
                        },
                        "expirationDate": {
                            "type": "string"
                        },
                        "daysOfWeek": {
                            "$ref": "#/definitions/DaysOfWeek"
                        },
                        "daysOfMonth": {
                            "$ref": "#/definitions/DaysOfMonth"
                        },
                        "timeZone": {
                            "$ref": "#/definitions/TimeZones"
                        },
                        "daylightSavingTime": {
                            "type": "string",
                            "enum": [
                                "ObserveDaylightSavingTime",
                                "PermanentStandardTime",
                                "PermanentDaylightSavingTime"
                            ]
                        },
                        "task": {
                            "oneOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id"
                                    ],
                                    "not": {
                                        "properties": {
                                            "filter": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "filter"
                                        ]
                                    }
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "filter": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "filter"
                                    ],
                                    "not": {
                                        "required": [
                                            "id"
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ]
        },
        "schemaTrigger.get": {
            "type": "object",
            "description": "Get instance of schema trigger(s)",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "schemaTrigger.get"
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "schemaTrigger.getAll": {
            "type": "object",
            "description": "Get instance of all schema trigger",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "schemaTrigger.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "schemaTrigger.remove": {
            "type": "object",
            "description": "Remove schema trigger(s)",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "schemaTrigger.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the schema triggers"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "schemaTrigger.update": {
            "type": "object",
            "description": "Update schema trigger(s) properties",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "schemaTrigger.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "repeat": {
                            "type": "string",
                            "enum": [
                                "Once",
                                "Minute",
                                "Hourly",
                                "Daily",
                                "Weekly",
                                "Monthly"
                            ]
                        },
                        "repeatEvery": {
                            "type": "integer"
                        },
                        "startDate": {
                            "type": "string"
                        },
                        "expirationDate": {
                            "type": "string"
                        },
                        "daysOfWeek": {
                            "$ref": "#/definitions/DaysOfWeek"
                        },
                        "daysOfMonth": {
                            "$ref": "#/definitions/DaysOfMonth"
                        },
                        "timeZone": {
                            "$ref": "#/definitions/TimeZones"
                        },
                        "daylightSavingTime": {
                            "type": "string",
                            "enum": [
                                "ObserveDaylightSavingTime",
                                "PermanentStandardTime",
                                "PermanentDaylightSavingTime"
                            ]
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the entities(s) to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "serviceStatus.get": {
            "type": "object",
            "description": "Get status of service by service id",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "serviceStatus.get"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "stream.create": {
            "type": "object",
            "description": "Create new stream",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "stream.create"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "stream.get": {
            "type": "object",
            "description": "Get instance of stream(s)",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "stream.get"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "stream.getAll": {
            "type": "object",
            "description": "Get instance of all streams",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "stream.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "stream.remove": {
            "type": "object",
            "description": "Remove stream/streams",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "stream.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the stream"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "stream.update": {
            "type": "object",
            "description": "Update stream(s) properties",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "stream.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Value in format: CustomPropertyName=value"
                            }
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "options": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "customPropertyOperation": {
                            "$ref": "#/definitions/AddRemoveSet"
                        },
                        "tagOperation": {
                            "$ref": "#/definitions/AddRemoveSet"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the stream(s) to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "systemRule.create": {
            "type": "object",
            "description": "Create new system rule",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "systemRule.create"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name",
                        "category",
                        "rule",
                        "resourceFilter"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "category": {
                            "type": "string",
                            "enum": [
                                "License",
                                "Security",
                                "Sync"
                            ]
                        },
                        "rule": {
                            "type": "string"
                        },
                        "resourceFilter": {
                            "type": "string"
                        },
                        "actions": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "None",
                                    "Create",
                                    "Read",
                                    "Update",
                                    "Delete",
                                    "Export",
                                    "Publish",
                                    "Change owner",
                                    "Change role",
                                    "Export data",
                                    "Offline access",
                                    "Distribute",
                                    "Duplicate",
                                    "Approve",
                                    "Allow access"
                                ]
                            }
                        },
                        "comment": {
                            "type": "string"
                        },
                        "disabled": {
                            "type": "boolean"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "systemRule.getAll": {
            "type": "object",
            "description": "Get instance of all systemRules",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "systemRule.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "systemRule": {
            "type": "object",
            "description": "Get instance of system rule/rules",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "systemRule.get"
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "systemRule.licenseCreate": {
            "type": "object",
            "description": "Create new license rule",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "systemRule.licenseCreate"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name",
                        "type",
                        "rule"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "Analyzer",
                                "Professional"
                            ]
                        },
                        "rule": {
                            "type": "string"
                        },
                        "comment": {
                            "type": "string"
                        },
                        "disabled": {
                            "type": "boolean"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "systemRule.remove": {
            "type": "object",
            "description": "Remove system rule",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "systemRule.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the system rule"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "systemRule.update": {
            "type": "object",
            "description": "Update system rule(s) properties",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "systemRule.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "tagOperation": {
                            "$ref": "#/definitions/AddRemoveSet"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the system rule(s) to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "tag.create": {
            "type": "object",
            "description": "Create new tag",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "tag.create"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean",
                            "description": "Default is false. If set to true then if there is already an tag with the same name the command will create new one"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "tag.createMany": {
            "type": "object",
            "description": "Create multiple new tag",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "tag.createMany"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "names"
                    ],
                    "properties": {
                        "names": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "tag.remove": {
            "type": "object",
            "description": "Remove tag(s)",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "tag.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the tag"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "tag.update": {
            "type": "object",
            "description": "Update tags(s) properties",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "tag.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "required": [
                        "name"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the tag(s) to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "task.get": {
            "type": "object",
            "description": "Get instance of task/tasks",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "task.get"
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "task.getAll": {
            "type": "object",
            "description": "Get instance of all tasks",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "task.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "task.start": {
            "type": "object",
            "description": "Start task(s)",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "task.start"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the task(s) to start"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "task.startSynchronous": {
            "type": "object",
            "description": "Start task(s) synchronous",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "task.startSynchronous"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the task(s) to start"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "task.stop": {
            "type": "object",
            "description": "Stop task(s)",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "task.stop"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the task(s) to stop"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "user.create": {
            "type": "object",
            "description": "Create new user",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "user.create"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "userId",
                        "userDirectory"
                    ],
                    "properties": {
                        "userId": {
                            "type": "string"
                        },
                        "userDirectory": {
                            "type": "string"
                        },
                        "roles": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "name": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "user.get": {
            "type": "object",
            "description": "Get instance of user/users",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "user.get"
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "user.getAll": {
            "type": "object",
            "description": "Get instance of all users",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "user.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "user.remove": {
            "type": "object",
            "description": "Remove user(s)",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "user.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the user"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "user.update": {
            "type": "object",
            "description": "Update user(s) properties",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "user.update"
                    ]
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "roles": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Value in format: CustomPropertyName=value"
                            }
                        }
                    }
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "customPropertyOperation": {
                            "$ref": "#/definitions/AddRemoveSet"
                        },
                        "tagOperation": {
                            "$ref": "#/definitions/AddRemoveSet"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the user(s) to update"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation",
                "details"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "virtualProxy.create": {
            "type": "object",
            "description": "Create new virtual proxy",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "virtualProxy.create"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "details": {
                    "type": "object",
                    "required": [
                        "prefix",
                        "description",
                        "sessionCookieHeaderName"
                    ],
                    "properties": {
                        "prefix": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "sessionCookieHeaderName": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "authenticationModuleRedirectUri": {
                            "type": "string"
                        },
                        "windowsAuthenticationEnabledDevicePattern": {
                            "type": "string"
                        },
                        "loadBalancingServerNodes": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "websocketCrossOriginWhiteList": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "additionalResponseHeaders": {
                            "type": "string"
                        },
                        "anonymousAccessMode": {
                            "type": "string",
                            "enum": [
                                "No anonymous",
                                "Allow anonymous",
                                "Always anonymous"
                            ]
                        },
                        "authenticationMethod": {
                            "type": "string",
                            "enum": [
                                "Ticket",
                                "HeaderStaticUserDirectory",
                                "HeaderDynamicUserDirectory",
                                "static",
                                "dynamic",
                                "SAML",
                                "JWT"
                            ]
                        },
                        "hasSecureAttributeHttp": {
                            "type": "boolean"
                        },
                        "sameSiteAttributeHttp": {
                            "type": "string",
                            "enum": [
                                "No attribute",
                                "None",
                                "Lax",
                                "Strict"
                            ]
                        },
                        "hasSecureAttributeHttps": {
                            "type": "boolean"
                        },
                        "sameSiteAttributeHttps": {
                            "type": "string",
                            "enum": [
                                "No attribute",
                                "None",
                                "Lax",
                                "Strict"
                            ]
                        },
                        "headerAuthenticationHeaderName": {
                            "type": "string"
                        },
                        "extendedSecurityEnvironment": {
                            "type": "boolean"
                        },
                        "headerAuthenticationStaticUserDirectory": {
                            "type": "string"
                        },
                        "headerAuthenticationDynamicUserDirectory": {
                            "type": "string"
                        },
                        "samlMetadataIdP": {
                            "type": "string"
                        },
                        "samlHostUri": {
                            "type": "string"
                        },
                        "samlEntityId": {
                            "type": "string"
                        },
                        "samlAttributeUserId": {
                            "type": "string"
                        },
                        "samlAttributeUserDirectory": {
                            "type": "string"
                        },
                        "samlAttributeMap": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "samlSlo": {
                            "type": "boolean"
                        },
                        "jwtPublicKeyCertificate": {
                            "type": "string"
                        },
                        "jwtAttributeUserId": {
                            "type": "string"
                        },
                        "jwtAttributeUserDirectory": {
                            "type": "string"
                        },
                        "jwtAttributeMap": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "sessionInactivityTimeout": {
                            "type": "integer"
                        },
                        "oidcConfigurationEndpointUri": {
                            "type": "string"
                        },
                        "oidcClientId": {
                            "type": "string"
                        },
                        "oidcClientSecret": {
                            "type": "string"
                        },
                        "oidcRealm": {
                            "type": "string"
                        },
                        "oidcAttributeSub": {
                            "type": "string"
                        },
                        "oidcAttributeName": {
                            "type": "string"
                        },
                        "oidcAttributeGroups": {
                            "type": "string"
                        },
                        "oidcAttributeEmail": {
                            "type": "string"
                        },
                        "oidcAttributeClientId": {
                            "type": "string"
                        },
                        "oidcAttributePicture": {
                            "type": "string"
                        },
                        "oidcScope": {
                            "type": "string"
                        },
                        "oidcAttributeMap": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "enableEngineSaturationCheck": {
                            "type": "boolean"
                        },
                        "enableEngineHealthCheckData": {
                            "type": "boolean"
                        },
                        "useStickyLoadBalancing": {
                            "type": "boolean"
                        },
                        "loadBalancingAlgorithm": {
                            "type": "string",
                            "enum": [
                                "RoundRobin",
                                "MemoryAllocation"
                            ]
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "virtualProxy.get": {
            "type": "object",
            "description": "Get instance of virtual proxy/proxies",
            "required": [
                "name",
                "operation",
                "filter"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "virtualProxy.get"
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "virtualProxy.getAll": {
            "type": "object",
            "description": "Get instance of all virtual proxies",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "virtualProxy.getAll"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "virtualProxy.remove": {
            "type": "object",
            "description": "Remove virtual proxy(ies",
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "virtualProxy.remove"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "filter": {
                    "type": "string",
                    "description": "Filter to apply to retrieve the virtual proxy"
                },
                "source": {
                    "type": "string",
                    "description": "Name of previously defined tasks. Use the result of the task as source"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            },
            "required": [
                "name",
                "operation"
            ],
            "oneOf": [
                {
                    "$ref": "#/definitions/OneOf_1"
                },
                {
                    "$ref": "#/definitions/OneOf_2"
                }
            ]
        },
        "virtualProxy.update": {
            "type": "object",
            "description": "Update virtual proxy",
            "required": [
                "name",
                "operation",
                "details"
            ],
            "properties": {
                "name": {
                    "$ref": "#/definitions/TaskName"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "virtualProxy.update"
                    ]
                },
                "skip": {
                    "type": "boolean"
                },
                "options": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "multiple": {
                            "type": "boolean"
                        },
                        "customPropertyOperation": {
                            "$ref": "#/definitions/AddRemoveSet"
                        },
                        "tagOperation": {
                            "$ref": "#/definitions/AddRemoveSet"
                        },
                        "whitelistOperation": {
                            "$ref": "#/definitions/AddRemoveSet"
                        },
                        "loopParallel": {
                            "type": "boolean",
                            "description": "applied if 'loop' is used. Loop through the values in parallel or in sequence. Defaults is 'false'"
                        },
                        "parallel": {
                            "type": "boolean",
                            "description": "process entities in parallel or sequence, default is true"
                        },
                        "concurrency": {
                            "type": "number",
                            "description": " if parallel == true then this option will make sure that the task entries are process N at the time. Rolling N"
                        },
                        "batch": {
                            "type": "number",
                            "description": "if parallel == true then this option process the task entities in batches. Each batch will start once all entities are processed from the previous batch.\n\nTHE TASKS IN EACH BATCH ARE PROCESSED IN PARALLEL!"
                        }
                    }
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "prefix": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "sessionCookieHeaderName": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "customProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "authenticationModuleRedirectUri": {
                            "type": "string"
                        },
                        "windowsAuthenticationEnabledDevicePattern": {
                            "type": "string"
                        },
                        "loadBalancingServerNodes": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "websocketCrossOriginWhiteList": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "additionalResponseHeaders": {
                            "type": "string"
                        },
                        "anonymousAccessMode": {
                            "type": "string",
                            "enum": [
                                "No anonymous",
                                "Allow anonymous",
                                "Always anonymous"
                            ]
                        },
                        "authenticationMethod": {
                            "type": "string",
                            "enum": [
                                "Ticket",
                                "HeaderStaticUserDirectory",
                                "HeaderDynamicUserDirectory",
                                "static",
                                "dynamic",
                                "SAML",
                                "JWT"
                            ]
                        },
                        "hasSecureAttributeHttp": {
                            "type": "boolean"
                        },
                        "sameSiteAttributeHttp": {
                            "type": "string",
                            "enum": [
                                "No attribute",
                                "None",
                                "Lax",
                                "Strict"
                            ]
                        },
                        "hasSecureAttributeHttps": {
                            "type": "boolean"
                        },
                        "sameSiteAttributeHttps": {
                            "type": "string",
                            "enum": [
                                "No attribute",
                                "None",
                                "Lax",
                                "Strict"
                            ]
                        },
                        "headerAuthenticationHeaderName": {
                            "type": "string"
                        },
                        "extendedSecurityEnvironment": {
                            "type": "boolean"
                        },
                        "headerAuthenticationStaticUserDirectory": {
                            "type": "string"
                        },
                        "headerAuthenticationDynamicUserDirectory": {
                            "type": "string"
                        },
                        "samlMetadataIdP": {
                            "type": "string"
                        },
                        "samlHostUri": {
                            "type": "string"
                        },
                        "samlEntityId": {
                            "type": "string"
                        },
                        "samlAttributeUserId": {
                            "type": "string"
                        },
                        "samlAttributeUserDirectory": {
                            "type": "string"
                        },
                        "samlAttributeMap": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "samlSlo": {
                            "type": "boolean"
                        },
                        "jwtPublicKeyCertificate": {
                            "type": "string"
                        },
                        "jwtAttributeUserId": {
                            "type": "string"
                        },
                        "jwtAttributeUserDirectory": {
                            "type": "string"
                        },
                        "jwtAttributeMap": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "sessionInactivityTimeout": {
                            "type": "integer"
                        },
                        "oidcConfigurationEndpointUri": {
                            "type": "string"
                        },
                        "oidcClientId": {
                            "type": "string"
                        },
                        "oidcClientSecret": {
                            "type": "string"
                        },
                        "oidcRealm": {
                            "type": "string"
                        },
                        "oidcAttributeSub": {
                            "type": "string"
                        },
                        "oidcAttributeName": {
                            "type": "string"
                        },
                        "oidcAttributeGroups": {
                            "type": "string"
                        },
                        "oidcAttributeEmail": {
                            "type": "string"
                        },
                        "oidcAttributeClientId": {
                            "type": "string"
                        },
                        "oidcAttributePicture": {
                            "type": "string"
                        },
                        "oidcScope": {
                            "type": "string"
                        },
                        "oidcAttributeMap": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "enableEngineSaturationCheck": {
                            "type": "boolean"
                        },
                        "enableEngineHealthCheckData": {
                            "type": "boolean"
                        },
                        "useStickyLoadBalancing": {
                            "type": "boolean"
                        },
                        "loadBalancingAlgorithm": {
                            "type": "string",
                            "enum": [
                                "RoundRobin",
                                "MemoryAllocation"
                            ]
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Task description (multiline is supported)"
                },
                "loop": {
                    "$ref": "#/definitions/Loop"
                },
                "onError": {
                    "$ref": "#/definitions/onError"
                }
            }
        },
        "AddRemoveSet": {
            "type": "string",
            "description": "set - replaces all existing values\nadd - append to the existing values\nremove - remove passed values",
            "enum": [
                "set",
                "add",
                "remove"
            ]
        },
        "Loop": {
            "description": "Array of values. The task will be ran N number of times, depending on the count of values specified. Check the documentation for more info about this property ",
            "type": "object",
            "oneOf": [
                {
                    "type": "object",
                    "required": [
                        "values"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "values": {
                            "type": "array",
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": [
                                            "string",
                                            "number",
                                            "boolean"
                                        ]
                                    }
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "patternProperties": {
                                            "^.*$": {
                                                "type": [
                                                    "string",
                                                    "number",
                                                    "boolean"
                                                ]
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                },
                {
                    "type": "object",
                    "required": [
                        "format",
                        "location"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "format": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "json",
                                "yaml"
                            ]
                        },
                        "location": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "UpdateExtraOptions": {
            "type": "object",
            "properties": {
                "multiple": {
                    "type": "boolean"
                },
                "customPropertyOperation": {
                    "$ref": "#/definitions/AddRemoveSet"
                },
                "tagOperation": {
                    "$ref": "#/definitions/AddRemoveSet"
                },
                "loopParallel": {
                    "type": "boolean"
                }
            }
        },
        "OneOf_1": {
            "type": "object",
            "properties": {
                "filter": {
                    "type": "string"
                }
            },
            "required": [
                "filter"
            ],
            "not": {
                "properties": {
                    "source": {
                        "type": "string"
                    }
                },
                "required": [
                    "source"
                ]
            }
        },
        "OneOf_2": {
            "type": "object",
            "properties": {
                "source": {
                    "type": "string"
                }
            },
            "required": [
                "source"
            ],
            "not": {
                "required": [
                    "filter"
                ]
            }
        },
        "Tasks_Without_Import": {
            "type": "array",
            "minItems": 1,
            "items": {
                "anyOf": [
                    {
                        "$ref": "#/definitions/about.apiDefaults"
                    },
                    {
                        "$ref": "#/definitions/about.apiDescription"
                    },
                    {
                        "$ref": "#/definitions/about.apiRelations"
                    },
                    {
                        "$ref": "#/definitions/about.enums"
                    },
                    {
                        "$ref": "#/definitions/about.get"
                    },
                    {
                        "$ref": "#/definitions/about.openApi"
                    },
                    {
                        "$ref": "#/definitions/app.copy"
                    },
                    {
                        "$ref": "#/definitions/app.export"
                    },
                    {
                        "$ref": "#/definitions/app.exportMany"
                    },
                    {
                        "$ref": "#/definitions/app.get"
                    },
                    {
                        "$ref": "#/definitions/app.getAll"
                    },
                    {
                        "$ref": "#/definitions/app.publish"
                    },
                    {
                        "$ref": "#/definitions/app.remove"
                    },
                    {
                        "$ref": "#/definitions/app.switch"
                    },
                    {
                        "$ref": "#/definitions/app.update"
                    },
                    {
                        "$ref": "#/definitions/app.upload"
                    },
                    {
                        "$ref": "#/definitions/app.uploadAndReplace"
                    },
                    {
                        "$ref": "#/definitions/app.uploadMany"
                    },
                    {
                        "$ref": "#/definitions/certificate.distributionPathGet"
                    },
                    {
                        "$ref": "#/definitions/certificate.generate"
                    },
                    {
                        "$ref": "#/definitions/compositeTrigger.create"
                    },
                    {
                        "$ref": "#/definitions/compositeTrigger.get"
                    },
                    {
                        "$ref": "#/definitions/compositeTrigger.getAll"
                    },
                    {
                        "$ref": "#/definitions/compositeTrigger.remove"
                    },
                    {
                        "$ref": "#/definitions/compositeTrigger.update"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.create"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.export"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.exportMany"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.get"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.getAll"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.importFile"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.importFileMany"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.remove"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.removeFile"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.removeFileMany"
                    },
                    {
                        "$ref": "#/definitions/contentLibrary.update"
                    },
                    {
                        "$ref": "#/definitions/customBannerMessage.create"
                    },
                    {
                        "$ref": "#/definitions/customBannerMessage.get"
                    },
                    {
                        "$ref": "#/definitions/customBannerMessage.getAll"
                    },
                    {
                        "$ref": "#/definitions/customBannerMessage.remove"
                    },
                    {
                        "$ref": "#/definitions/customBannerMessage.update"
                    },
                    {
                        "$ref": "#/definitions/customProperty.create"
                    },
                    {
                        "$ref": "#/definitions/customProperty.get"
                    },
                    {
                        "$ref": "#/definitions/customProperty.remove"
                    },
                    {
                        "$ref": "#/definitions/customProperty.update"
                    },
                    {
                        "$ref": "#/definitions/dataConnection.create"
                    },
                    {
                        "$ref": "#/definitions/dataConnection.get"
                    },
                    {
                        "$ref": "#/definitions/dataConnection.getAll"
                    },
                    {
                        "$ref": "#/definitions/dataConnection.remove"
                    },
                    {
                        "$ref": "#/definitions/dataConnection.update"
                    },
                    {
                        "$ref": "#/definitions/engineHealth.create"
                    },
                    {
                        "$ref": "#/definitions/engineHealth.get"
                    },
                    {
                        "$ref": "#/definitions/engineHealth.getAll"
                    },
                    {
                        "$ref": "#/definitions/engineHealth.remove"
                    },
                    {
                        "$ref": "#/definitions/engineHealth.update"
                    },
                    {
                        "$ref": "#/definitions/extension.get"
                    },
                    {
                        "$ref": "#/definitions/extension.getAll"
                    },
                    {
                        "$ref": "#/definitions/extension.import"
                    },
                    {
                        "$ref": "#/definitions/extension.remove"
                    },
                    {
                        "$ref": "#/definitions/extension.update"
                    },
                    {
                        "$ref": "#/definitions/externalTask.create"
                    },
                    {
                        "$ref": "#/definitions/externalTask.get"
                    },
                    {
                        "$ref": "#/definitions/externalTask.getAll"
                    },
                    {
                        "$ref": "#/definitions/externalTask.remove"
                    },
                    {
                        "$ref": "#/definitions/externalTask.update"
                    },
                    {
                        "$ref": "#/definitions/import"
                    },
                    {
                        "$ref": "#/definitions/node.get"
                    },
                    {
                        "$ref": "#/definitions/node.getAll"
                    },
                    {
                        "$ref": "#/definitions/proxy.update"
                    },
                    {
                        "$ref": "#/definitions/reloadTask.create"
                    },
                    {
                        "$ref": "#/definitions/reloadTask.remove"
                    },
                    {
                        "$ref": "#/definitions/reloadTask.update"
                    },
                    {
                        "$ref": "#/definitions/schemaTrigger.create"
                    },
                    {
                        "$ref": "#/definitions/schemaTrigger.get"
                    },
                    {
                        "$ref": "#/definitions/schemaTrigger.getAll"
                    },
                    {
                        "$ref": "#/definitions/schemaTrigger.remove"
                    },
                    {
                        "$ref": "#/definitions/schemaTrigger.update"
                    },
                    {
                        "$ref": "#/definitions/serviceStatus.get"
                    },
                    {
                        "$ref": "#/definitions/stream.create"
                    },
                    {
                        "$ref": "#/definitions/stream.get"
                    },
                    {
                        "$ref": "#/definitions/stream.getAll"
                    },
                    {
                        "$ref": "#/definitions/stream.remove"
                    },
                    {
                        "$ref": "#/definitions/stream.update"
                    },
                    {
                        "$ref": "#/definitions/systemRule.create"
                    },
                    {
                        "$ref": "#/definitions/systemRule.getAll"
                    },
                    {
                        "$ref": "#/definitions/systemRule"
                    },
                    {
                        "$ref": "#/definitions/systemRule.licenseCreate"
                    },
                    {
                        "$ref": "#/definitions/systemRule.remove"
                    },
                    {
                        "$ref": "#/definitions/systemRule.update"
                    },
                    {
                        "$ref": "#/definitions/tag.create"
                    },
                    {
                        "$ref": "#/definitions/tag.createMany"
                    },
                    {
                        "$ref": "#/definitions/tag.remove"
                    },
                    {
                        "$ref": "#/definitions/tag.update"
                    },
                    {
                        "$ref": "#/definitions/task.get"
                    },
                    {
                        "$ref": "#/definitions/task.getAll"
                    },
                    {
                        "$ref": "#/definitions/task.start"
                    },
                    {
                        "$ref": "#/definitions/task.startSynchronous"
                    },
                    {
                        "$ref": "#/definitions/task.stop"
                    },
                    {
                        "$ref": "#/definitions/user.create"
                    },
                    {
                        "$ref": "#/definitions/user.get"
                    },
                    {
                        "$ref": "#/definitions/user.getAll"
                    },
                    {
                        "$ref": "#/definitions/user.remove"
                    },
                    {
                        "$ref": "#/definitions/user.update"
                    },
                    {
                        "$ref": "#/definitions/virtualProxy.create"
                    },
                    {
                        "$ref": "#/definitions/virtualProxy.get"
                    },
                    {
                        "$ref": "#/definitions/virtualProxy.getAll"
                    },
                    {
                        "$ref": "#/definitions/virtualProxy.remove"
                    },
                    {
                        "$ref": "#/definitions/virtualProxy.update"
                    }
                ]
            }
        },
        "onError": {
            "oneOf": [
                {
                    "type": "object",
                    "properties": {
                        "tasks": {
                            "$ref": "#/definitions/Tasks_Without_Import"
                        }
                    },
                    "required": [
                        "tasks"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "exit": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "exit"
                    ]
                },
                {
                    "type": "object",
                    "properties": {
                        "ignore": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "ignore"
                    ]
                }
            ]
        },
        "DaysOfWeek": {
            "type": "array",
            "items": {
                "type": "string",
                "enum": [
                    "Monday",
                    "Tuesday",
                    "Wednesday",
                    "Thursday",
                    "Friday",
                    "Saturday",
                    "Sunday"
                ]
            }
        },
        "DaysOfMonth": {
            "type": "array",
            "items": {
                "type": "integer",
                "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31
                ]
            }
        },
        "TimeZones": {
            "type": "string",
            "enum": [
                "Pacific/Honolulu",
                "America/Anchorage",
                "America/Los_Angeles",
                "America/Denver",
                "America/Mazatlan",
                "America/Phoenix",
                "America/Belize",
                "America/Chicago",
                "America/Mexico_City",
                "America/Regina",
                "America/Bogota",
                "America/Indianapolis",
                "America/New_York",
                "America/Caracas",
                "America/Halifax",
                "America/St_Johns",
                "America/Buenos_Aires",
                "America/Godthab",
                "America/Santiago",
                "America/Sao_Paulo",
                "Atlantic/South_Georgia",
                "Atlantic/Azores",
                "Atlantic/Cape_Verde",
                "UTC",
                "Atlantic/Reykjavik",
                "Africa/Casablanca",
                "Europe/Dublin",
                "Europe/Belgrade",
                "Europe/Paris",
                "Europe/Warsaw",
                "Africa/Cairo",
                "Africa/Harare",
                "Asia/Jerusalem",
                "Europe/Athens",
                "Europe/Bucharest",
                "Europe/Helsinki",
                "Africa/Nairobi",
                "Asia/Baghdad",
                "Asia/Kuwait",
                "Europe/Minsk",
                "Europe/Moscow",
                "Asia/Tehran",
                "Asia/Baku",
                "Asia/Muscat",
                "Asia/Kabul",
                "Asia/Karachi",
                "Asia/Yekaterinburg",
                "Asia/Calcutta",
                "Asia/Colombo",
                "Asia/Katmandu",
                "Asia/Almaty",
                "Asia/Dhaka",
                "Asia/Rangoon",
                "Asia/Bangkok",
                "Asia/Krasnoyarsk",
                "Asia/Hong_Kong",
                "Asia/Irkutsk",
                "Asia/Kuala_Lumpur",
                "Asia/Taipei",
                "Australia/Perth",
                "Asia/Seoul",
                "Asia/Tokyo",
                "Asia/Yakutsk",
                "Australia/Adelaide",
                "Australia/Darwin",
                "Asia/Vladivostok",
                "Australia/Brisbane",
                "Australia/Hobart",
                "Australia/Sydney",
                "Pacific/Guam",
                "Pacific/Noumea",
                "Pacific/Auckland",
                "Pacific/Fiji",
                "Pacific/Apia",
                "Pacific/Tongatapu"
            ]
        },
        "TaskName": {
            "type": "string",
            "description": "Unique name of the task. It should not contain #",
            "pattern": "^[^#]*$",
            "errorMessage": "Task name should not contain #"
        }
    }
}